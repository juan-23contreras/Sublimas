package com.pry.sublimadoscr.hecho;import android.app.Fragment;import android.app.FragmentManager;import android.content.Intent;import android.os.Bundle;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.ProgressBar;import android.widget.TextView;import android.widget.Toast;import com.android.volley.Request;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import com.google.android.material.navigation.NavigationView;import com.pry.sublimadoscr.R;import com.pry.sublimadoscr.databinding.ActivityAdminMainBinding;import org.json.JSONArray;import org.json.JSONObject;import java.util.ArrayList;import java.util.List;import androidx.appcompat.app.ActionBar;import androidx.appcompat.app.ActionBarDrawerToggle;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.core.view.GravityCompat;import androidx.drawerlayout.widget.DrawerLayout;import androidx.recyclerview.widget.GridLayoutManager;import androidx.recyclerview.widget.RecyclerView;public class NavigationAdminActivity extends AppCompatActivity		implements NavigationView.OnNavigationItemSelectedListener {private ActivityAdminMainBinding binding;	// Variable declarations	private String userEmail;	private TextView textView;	private Toolbar mToolbar;	private ActionBar mActionBar;	private RecyclerView recyclerView;	private RecyclerView.LayoutManager manager;	private RecyclerAdmidAdapter mAdapter;	private List<Product> products;	private ProgressBar progressBar;	//    private static  final String BASE_URL = "http://192.168.100.16/android/getProducts.php";	private static  final String BASE_URL = "https://ticssoluciones2024.000webhostapp.com/sublimados/getProducts.php";	Toolbar toolbar;	DrawerLayout drawer;	NavigationView navigationView;	FragmentManager fragmentManager;	Fragment fragment = null;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		binding= ActivityAdminMainBinding.inflate(getLayoutInflater());		setContentView(binding.getRoot());		toolbar =  findViewById(R.id.toolbar);		setSupportActionBar(toolbar);		drawer = (DrawerLayout) findViewById(R.id.drawer_layout);		ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(				this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);		drawer.addDrawerListener(toggle);		toggle.syncState();		navigationView = (NavigationView) findViewById(R.id.nav_view);		navigationView.setNavigationItemSelectedListener(this);		progressBar = findViewById(R.id.progressbar);		setSupportActionBar(mToolbar);		mActionBar = getSupportActionBar();		recyclerView = findViewById(R.id.products_recyclerView);		manager = new GridLayoutManager(NavigationAdminActivity.this, 2);		recyclerView.setLayoutManager(manager);		products = new ArrayList<>();		getProducts();	}	private void getProducts (){		progressBar.setVisibility(View.VISIBLE);		StringRequest stringRequest = new StringRequest(Request.Method.GET, BASE_URL,				new Response.Listener<String>() {					@Override					public void onResponse(String response) {						progressBar.setVisibility(View.GONE);						try {							JSONArray array = new JSONArray(response);							for (int i = 0; i<array.length(); i++){								JSONObject object = array.getJSONObject(i);								String id = object.getString("0");								String codigo = object.getString("1");								String categoria = object.getString("2");								String nombre = object.getString("3");								String precio = object.getString("4");								String descripcion = object.getString("5");								String cantidad = object.getString("6");								String image = object.getString("7");								String caracteristicas = object.getString("8");								Product product = new Product(id,codigo,categoria,nombre,precio,descripcion,cantidad,image,caracteristicas);								products.add(product);							}						}catch (Exception e){						}						mAdapter = new RecyclerAdmidAdapter(NavigationAdminActivity.this,products);						recyclerView.setAdapter(mAdapter);					}				}, new Response.ErrorListener() {			@Override			public void onErrorResponse(VolleyError error) {				progressBar.setVisibility(View.GONE);				Toast.makeText(NavigationAdminActivity.this, error.toString(),Toast.LENGTH_LONG).show();			}		});		Volley.newRequestQueue(NavigationAdminActivity.this).add(stringRequest);	}	@Override	public void onBackPressed() {		drawer = (DrawerLayout) findViewById(R.id.drawer_layout);		if (drawer.isDrawerOpen(GravityCompat.START)) {			drawer.closeDrawer(GravityCompat.START);		} else {			super.onBackPressed();		}	}	@Override	public boolean onCreateOptionsMenu(Menu menu) {		// Inflate the menu; this adds items to the action bar if it is present.		getMenuInflater().inflate(R.menu.activity_main_drawer, menu);		return true;	}	@Override	public boolean onOptionsItemSelected(MenuItem item) {		// Handle action bar item clicks here. The action bar will		// automatically handle clicks on the Home/Up button, so long		// as you specify a parent activity in AndroidManifest.xml.		int id = item.getItemId();		//noinspection SimplifiableIfStatement		if (id == R.id.action_settings) {			Toast.makeText(getApplicationContext(), "Action Settings", Toast.LENGTH_SHORT).show();			return true;		}		return super.onOptionsItemSelected(item);	}	@SuppressWarnings("StatementWithEmptyBody")	@Override	public boolean onNavigationItemSelected(MenuItem item) {		// Handle navigation view item clicks here.		int id = item.getItemId();		if (id == R.id.item_product) {			products.clear();			getProducts();		}		else if (id == R.id.it_productupload) {			startActivity(new Intent(this,CrearProducto.class).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK).putExtra("CLAVE","CREAR"));		}		else if (id == R.id.item_pedidos) {			startActivity(new Intent(this,PedidosActivity.class).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK));		}		else if (id == R.id.item_delete) {			finish();			startActivity(new Intent(NavigationAdminActivity.this, DeleteAccount.class));			overridePendingTransition(R.anim.slide_in_right,R.anim.stay);		}		drawer = (DrawerLayout) findViewById(R.id.drawer_layout);		drawer.closeDrawer(GravityCompat.START);		return true;	}}